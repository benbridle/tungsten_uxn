( Draw proportional text )
@draw_text                                ( colour text_addr* -- )
  ROT ,&colour STR                          ( t_addr* )
  r/SCREEN.X DEIkr* ROTr                    ( t_addr* | x* axis )
  &loop                                   ( t_addr* | x* axis )
    LDAk DUP ,&render JCN                   ( t_addr* ascii | x* axis )
    POP POP* DEOr* RETURN                   ( -- )
  &render
    ASCII_TO_INDEX TO_SHORT DUP* MUL8*      ( t_addr* code* code8* | x* axis )
    ;acorn_font/characters ADD*             ( t_addr* code* sprite* | x* axis )
    /SCREEN.ADDR!                           ( t_addr* code* | x* axis )
    [ LIT &colour $1 ]  /SCREEN.SPRITE!     ( t_addr* code* | x* axis )
    ;acorn_font/width ADD* LDA TO_SHORT     ( t_addr* char_width* | x* axis )
    /SCREEN.X? ADD* /SCREEN.X!              ( t_addr* | x* axis )
    INC* ,&loop JMP                         ( t_addr* | x* axis )

@get_text_width                           ( text_addr* -- width* )
  #0000 SWP*                                ( width* t_addr* )
  &loop                                   ( width* t_addr* )
    LDAk DUP ,&cont JCN                     ( width* t_addr* ascii )
  &end                                    ( width* t_addr* ascii )
    POP POP* RETURN                         ( width* )
  &cont                                   ( width* t_addr* ascii )
    ASCII_TO_INDEX TO_SHORT                 ( width* t_addr* code* )
    ;acorn_font/width ADD* LDA TO_SHORT     ( width* t_addr* char_width* )
    ROT* ADD* SWP* INC* ,&loop JMP          ( width* t_addr* )

